---
- name: "Set hostname"
  hostname:
    name: "{{ hostname|quote }}"
    use: systemd
  tags: hostname

- name: "Set env"
  copy:
    src: "ipenv.sh"
    dest: "/etc/profile.d/"
  tags: os_env

- name: "Set timezone"
  timezone:
    name: Asia/Shanghai

# - name: "Install chrony"
#   apt:
#     name: "chrony"
#     state: installed
#   tags: ntp
# 
# - name: "Set chrony"
#   copy:
#     src: "chrony.conf"
#     dest: "/etc/chrony.conf"
#   notify:
#     - restart chrony
#   tags: ntp

- name: "Disable swap"
  shell: swapoff -a
  tags: swap

- name: "Remove swapfile from /etc/fstab"
  mount:
    name: "swap"
    fstype: sqap
    state: absent
  tags: swap

- name: "Disable selinux"
  selinux:
    state: disabled
  tags: selinux
  when: ansible_os_family == "RedHat"

- name: "Stop firewalld"
  systemd:
    name: firewalld
    enabled: no
    state: stopped
  tags: firewalld
  when: ansible_os_family == "RedHat"
  
- name: "Stop firewalld"
  systemd:
    name: ufw
    enabled: no
    state: stopped
  tags: firewalld
  when: ansible_os_family == "Debian"

- name: "Set ssh"
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regexp: "UseDNS", line: "UseDNS no" }
    - { regexp: "AddressFamily", line: "AddressFamily inet" }
    - { regexp: "PermitRootLogin", line: "PermitRootLogin yes" }
    - { regexp: "PermitEmptyPasswords", line: "PermitEmptyPasswords no" }
    - { regexp: "PasswordAuthentication", line: "PasswordAuthentication no" }
  notify:
    - restart sshd
  tags: sshd

- name: "Set limits"
  pam_limits:
    dest: "/etc/security/limits.conf"
    domain: '{{ item.limit_domain }}'
    limit_type: "{{ item.limit_type }}"
    limit_item: "{{ item.limit_item }}"
    value: "{{ item.value }}"
  with_items:
    - { limit_domain: 'root',limit_type: 'soft',limit_item: 'nofile', value: '655360' }
    - { limit_domain: 'root',limit_type: 'hard',limit_item: 'nofile', value: '655360' }
    - { limit_domain: '*',limit_type: 'soft',limit_item: 'core', value: '0' }
    - { limit_domain: '*',limit_type: 'hard',limit_item: 'core', value: '0' }
    - { limit_domain: '*',limit_type: 'soft',limit_item: 'nproc', value: '655360' }
    - { limit_domain: '*',limit_type: 'hard',limit_item: 'nproc', value: '655360' }
    - { limit_domain: '*',limit_type: 'soft',limit_item: 'stack', value: 'unlimited' }
    - { limit_domain: '*',limit_type: 'hard',limit_item: 'stack', value: 'unlimited' }
    - { limit_domain: '*',limit_type: 'soft',limit_item: 'nofile', value: '655360' }
    - { limit_domain: '*',limit_type: 'hard',limit_item: 'nofile', value: '655360' }
  tags: limits

- name: "Set systemd limits"
  lineinfile:
    dest: "/etc/systemd/system.conf"
    line: "{{ item.line }}"
    state: present
  with_items:
    - {line: 'DefaultLimitNOFILE=65535' }
    - {line: 'DefaultLimitNPROC=65535' }
  tags: limits

- name: "Enabled modlue"
  modprobe:
    name: "{{ item.line }}"
    state: present
  with_items:
    - {line: 'ip_vs' }
    - {line: 'ip_vs_sh' }
    - {line: 'ip_vs_rr' }
    - {line: 'ip_vs_wrr' }
    - {line: 'ip_vs_wlc' }
    - {line: 'bridge' }
    - {line: 'overlay' }
    - {line: 'br_netfilter' }
  tags: mod

- name: "Enabled conntrack modlue"
  modprobe:
    name: "nf_conntrack_ipv4"
    state: present
  when: ansible_kernel.split('-')[0] is version('4.19.0', '<')
  tags: mod

- name: "Enabled conntrack modlue"
  modprobe:
    name: "nf_conntrack"
    state: present
  when: ansible_kernel.split('-')[0] is version('4.19.0', '>=')
  tags: mod

- name: "Modify sysctl"
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  with_items:
    - {name: 'kernel.sysrq',value: '1' }
    - {name: 'vm.swappiness ',value: ' 0' }
    - {name: 'net.ipv4.ip_forward',value: '1' }
    - {name: 'net.ipv4.neigh.default.gc_stale_time',value: '120' }
    - {name: 'net.ipv4.conf.all.rp_filter',value: '0' }
    - {name: 'net.ipv4.conf.default.rp_filter',value: '0' }
    - {name: 'net.ipv4.conf.default.arp_announce ',value: ' 2' }
    - {name: 'net.ipv4.conf.lo.arp_announce',value: '2' }
    - {name: 'net.ipv4.conf.all.arp_announce',value: '2' }
    - {name: 'net.ipv4.tcp_max_tw_buckets',value: '5000' }
    - {name: 'net.ipv4.tcp_syncookies ',value: ' 1' }
    - {name: 'net.ipv4.tcp_max_syn_backlog ',value: ' 1024' }
    - {name: 'net.ipv4.tcp_synack_retries ',value: ' 2' }
    - {name: 'net.ipv4.tcp_fin_timeout',value: '30' }
    - {name: 'net.ipv4.ip_local_port_range',value: '20000 60999' }
    - {name: 'net.netfilter.nf_conntrack_max',value: '2310720' }
    - {name: 'net.bridge.bridge-nf-call-iptables',value: '1' }
    - {name: 'net.bridge.bridge-nf-call-ip6tables',value: '1' }
  tags: sysctl

- name: "Install base application"
  yum:
    name: "{{ item.line }}"
    state: installed
  with_items:
    - {line: 'vim'}
    - {line: 'mtr'}
    - {line: 'curl'}
    - {line: 'wget'}
    - {line: 'lsof'}
    - {line: 'lrzsz'}
    - {line: 'rsync'}
    - {line: 'telnet'}
    - {line: 'bash-completion'}
    - {line: 'nmap-ncat'}
    - {line: 'net-tools'}
    - {line: 'nfs-utils'}
    - {line: 'yum-utils'}
  tags: install_app
  when: ansible_os_family == "RedHat"

- name: "Install base application"
  apt:
    name: "{{ item.line }}"
    state: present
  with_items:
    - {line: 'vim'}
    - {line: 'mtr'}
    - {line: 'curl'}
    - {line: 'wget'}
    - {line: 'lsof'}
    - {line: 'lrzsz'}
    - {line: 'rsync'}
    - {line: 'telnet'}
    - {line: 'bash-completion'}
    - {line: 'ncat'}
    - {line: 'net-tools'}
    - {line: 'nfs-common'}
    - {line: 'ntpdate'}
  tags: install_app
  when: ansible_os_family == "Debian"
