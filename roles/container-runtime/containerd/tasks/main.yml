---
- name: Fail containerd setup if distribution is not supported
  fail:
    msg: "{{ ansible_distribution }} is not supported by containerd."
  when:
    - not ansible_distribution in ["CentOS", "OracleLinux", "RedHat", "Ubuntu", "Debian", "Fedora", "AlmaLinux", "Amazon"]

- name: "Add containerd repo"
  yum_repository:
    file: containerd
    name: "containerd"
    description: "Containerd Stable - $basearch"
    baseurl: "https://mirrors.bfsu.edu.cn/docker-ce/linux/centos/7/$basearch/stable"
    gpgkey: "https://mirrors.bfsu.edu.cn/docker-ce/linux/centos/gpg"
    gpgcheck: yes
    enabled: yes
  when: 
   - ansible_os_family == 'RedHat'
  tags: containerd_repo

- name: gather os specific variables
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - default.yaml
      paths:
        - 'vars'
      skip: true

- name: ensure containerd repository public key is installed
  apt_key:
    id: "{{ item }}"
    url: "{{ containerd_repo_key_info.url }}"
    state: present
  register: keyserver_task_result
  until: keyserver_task_result is succeeded
  retries: 4
  delay: "{{ retry_stagger | d(3) }}"
  with_items: "{{ containerd_repo_key_info.repo_keys }}"
  when: ansible_pkg_mgr == 'apt'

- name: ensure containerd repository is enabled
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items: "{{ containerd_repo_info.repos }}"
  when: ansible_pkg_mgr == 'apt'

- name: "Install containerd"
  yum:
    update_cache: yes
    enablerepo: containerd
    name: 'containerd.io{% if containerd.version is defined and containerd.version != ""  %}-{{ containerd.version }}{% endif %}'
    state: installed
  tags: install_containerd
  when: 
   - ansible_os_family == 'RedHat'

- name: "Install containerd"
  apt:
    name: 'containerd.io={% if containerd.version is defined and containerd.version != ""  %}{{ containerd.version }}{% endif %}'
    state: present
  when: 
   - ansible_pkg_mgr == 'apt'
  tags: install_containerd

- name: "Create containerd directory"
  file:
    path: "{{ containerd.root }}"
    owner: root
    group: root
    mode: 0755
    state: directory
  tags: containerd_config

- name: "Set containerd config"
  template:
    src: "config.toml.j2"
    dest: "/etc/containerd/config.toml"
    owner: root
    group: root
    mode: 0644
  tags: containerd_config
  notify:
    - restart containerd
